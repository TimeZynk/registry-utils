# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Release & Publish

on:
    # Auto when you run `npm version` and push the tag (e.g., v0.8.0)
    push:
        tags:
            - 'v*'
    # Also support creating a GitHub Release via UI/CLI
    release:
        types: [created]

permissions:
    contents: write # create/update Release
    id-token: write # needed for npm --provenance (optional; remove if unused)

jobs:
    build_and_test:
        name: Install, Lint, Build, Test
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0 # keep tags available

            - uses: actions/setup-node@v4
              with:
                  node-version: '24'
                  check-latest: true
                  cache: 'npm'
                  registry-url: https://registry.npmjs.org/

            - run: node -v && npm -v
            - run: npm ci --include=dev
            - run: npm run lint --if-present
            - run: npm run build --if-present
            - run: npm test
              env:
                  CI: true

    create_release:
        name: Create GitHub Release (from tag)
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        needs: build_and_test
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Verify tag matches package.json version
              id: verify
              run: |
                  TAG="${GITHUB_REF_NAME}"                       # e.g. v0.8.0
                  PKG_VERSION="v$(node -p "require('./package.json').version")"
                  echo "Tag: $TAG ; package.json: $PKG_VERSION"
                  if [ "$TAG" != "$PKG_VERSION" ]; then
                    echo "Tag and package.json version mismatch."
                    exit 1
                  fi
                  echo "tag=$TAG" >> "$GITHUB_OUTPUT"

            - name: Create GitHub Release
              uses: softprops/action-gh-release@v2
              with:
                  tag_name: ${{ steps.verify.outputs.tag }}
                  name: ${{ steps.verify.outputs.tag }}
                  generate_release_notes: true
                  make_latest: true
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    publish_npm:
        name: Publish to npm
        needs: build_and_test
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - uses: actions/setup-node@v4
              with:
                  node-version: '24'
                  check-latest: true
                  registry-url: https://registry.npmjs.org/
                  cache: 'npm'

            - run: npm ci --include=dev
            - run: npm run lint --if-present
            - run: npm run build --if-present
            - run: npm test
              env:
                  CI: true

            # For public scoped packages keep --access public; for unscoped you can omit it
            # Remove --provenance if you don't want supply chain provenance
            - run: npm publish --access public --provenance
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
